// ==============================================================
// Generated by Vitis HLS v2024.1.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module scaffold_fn_addFloat32Sigs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        zSign,
        float_exception_flags_1_i,
        float_exception_flags_1_o,
        float_exception_flags_1_o_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a;
input  [31:0] b;
input  [0:0] zSign;
input  [7:0] float_exception_flags_1_i;
output  [7:0] float_exception_flags_1_o;
output   float_exception_flags_1_o_ap_vld;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] float_exception_flags_1_o;
reg float_exception_flags_1_o_ap_vld;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [22:0] trunc_ln1294_1_fu_297_p1;
reg   [22:0] trunc_ln1294_1_reg_1165;
wire   [7:0] aExp_fu_301_p4;
reg   [7:0] aExp_reg_1170;
wire   [8:0] zext_ln1295_fu_311_p1;
reg   [8:0] zext_ln1295_reg_1177;
wire   [7:0] bExp_fu_315_p4;
reg   [7:0] bExp_reg_1182;
wire   [31:0] zext_ln1296_fu_347_p1;
reg   [31:0] zext_ln1296_reg_1189;
wire   [29:0] zext_ln1296_1_fu_351_p1;
reg   [29:0] zext_ln1296_1_reg_1196;
wire   [31:0] zext_ln1296_2_fu_363_p1;
reg   [31:0] zext_ln1296_2_reg_1202;
wire   [0:0] icmp_ln1306_fu_371_p2;
reg   [0:0] icmp_ln1306_reg_1210;
wire   [0:0] tmp_40_fu_377_p3;
reg   [0:0] tmp_40_reg_1214;
reg   [23:0] zSig_assign_reg_1218;
wire   [0:0] icmp_ln1320_fu_413_p2;
reg   [0:0] icmp_ln1320_reg_1226;
wire   [0:0] icmp_ln1325_fu_419_p2;
reg   [0:0] icmp_ln1325_reg_1230;
wire   [8:0] expDiff_8_fu_431_p3;
reg   [8:0] expDiff_8_reg_1235;
wire   [4:0] trunc_ln1297_2_fu_439_p1;
reg   [4:0] trunc_ln1297_2_reg_1241;
wire   [0:0] icmp_ln1307_fu_449_p2;
reg   [0:0] icmp_ln1307_reg_1249;
wire   [31:0] zext_ln1312_fu_485_p1;
reg   [31:0] zext_ln1312_reg_1253;
wire   [31:0] zext_ln1297_fu_497_p1;
reg   [31:0] zext_ln1297_reg_1260;
wire   [0:0] z_13_fu_527_p2;
reg   [0:0] z_13_reg_1271;
wire   [4:0] sub_ln135_fu_533_p2;
reg   [4:0] sub_ln135_reg_1276;
wire   [31:0] or_ln_fu_548_p4;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_propagateFloat32NaN_fu_281_ap_return;
wire    ap_CS_fsm_state6;
wire   [31:0] zSig_fu_568_p2;
wire    ap_CS_fsm_state7;
wire   [31:0] zext_ln1325_fu_588_p1;
wire    ap_CS_fsm_state8;
wire   [31:0] zext_ln137_3_fu_628_p1;
wire   [31:0] z_14_fu_673_p3;
wire    ap_CS_fsm_state9;
wire   [31:0] or_ln8_fu_681_p3;
wire    ap_CS_fsm_state10;
wire   [31:0] zext_ln137_fu_688_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] z_fu_729_p3;
wire    ap_CS_fsm_state12;
wire   [8:0] zExp_7_fu_791_p3;
wire    ap_CS_fsm_state13;
wire   [31:0] zSig_7_fu_799_p3;
wire   [6:0] roundBits_fu_811_p1;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln763_fu_815_p2;
reg   [0:0] icmp_ln763_reg_1356;
wire   [0:0] icmp_ln764_fu_821_p2;
reg   [0:0] icmp_ln764_reg_1360;
wire   [0:0] tmp_45_fu_839_p3;
reg   [0:0] tmp_45_reg_1364;
wire   [0:0] and_ln765_fu_847_p2;
reg   [0:0] and_ln765_reg_1369;
wire   [0:0] tmp_48_fu_853_p3;
reg   [0:0] tmp_48_reg_1373;
wire   [0:0] or_ln135_4_fu_897_p2;
reg   [0:0] or_ln135_4_reg_1377;
reg   [30:0] tmp_8_reg_1383;
reg   [5:0] tmp_9_cast_reg_1388;
wire   [24:0] and_ln782_fu_1054_p2;
reg   [24:0] and_ln782_reg_1399;
wire    ap_CS_fsm_state15;
wire   [31:0] or_ln737_4_fu_1138_p3;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    grp_propagateFloat32NaN_fu_281_ap_ready;
wire   [7:0] grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o;
wire    grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o_ap_vld;
reg   [31:0] bSig_9_reg_148;
wire   [0:0] icmp_ln132_3_fu_601_p2;
wire   [0:0] icmp_ln134_3_fu_616_p2;
wire   [0:0] icmp_ln132_fu_505_p2;
reg   [31:0] aSig_9_reg_165;
reg   [7:0] zExp_4_reg_182;
reg   [8:0] zExp_reg_199;
reg   [31:0] zSig_8_reg_209;
wire   [31:0] z_16_fu_923_p3;
reg   [31:0] ap_phi_mux_empty_phi_fu_222_p6;
reg   [31:0] empty_reg_219;
wire   [6:0] roundBits_5_fu_930_p3;
reg   [6:0] ap_phi_mux_roundBits_6_phi_fu_235_p6;
reg   [6:0] roundBits_6_reg_232;
reg   [8:0] zExp_assign_6_reg_243;
reg   [31:0] ap_phi_mux_retval_0_phi_fu_261_p18;
reg   [31:0] retval_0_reg_258;
wire   [0:0] icmp_ln1334_fu_407_p2;
wire   [31:0] add_ln737_fu_1089_p2;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln1308_fu_539_p2;
wire   [7:0] or_ln9_fu_1118_p6;
wire   [7:0] or_ln482_5_fu_962_p4;
wire   [7:0] or_ln1_fu_1002_p4;
wire   [0:0] or_ln775_fu_943_p2;
reg   [7:0] ap_sig_allocacmp_float_exception_flags_1_load_5;
wire   [0:0] icmp_ln779_fu_978_p2;
wire   [8:0] zext_ln1295_1_fu_325_p1;
wire   [8:0] expDiff_fu_329_p2;
wire   [28:0] aSig_fu_339_p3;
wire   [22:0] trunc_ln1294_fu_293_p1;
wire   [28:0] bSig_fu_355_p3;
wire   [29:0] zext_ln1296_3_fu_367_p1;
wire   [29:0] add_ln1339_fu_385_p2;
wire   [28:0] or_ln1334_fu_401_p2;
wire   [8:0] expDiff_7_fu_425_p2;
wire   [7:0] trunc_ln1297_fu_335_p1;
wire   [0:0] icmp_ln1312_fu_455_p2;
wire   [29:0] bSig_8_fu_467_p4;
wire   [29:0] select_ln1312_fu_477_p3;
wire   [7:0] expDiff_5_fu_461_p2;
wire   [7:0] expDiff_6_fu_489_p3;
wire   [2:0] tmp_41_fu_511_p4;
wire   [4:0] trunc_ln1297_1_fu_501_p1;
wire   [29:0] zext_ln1339_fu_545_p1;
wire   [30:0] zext_ln1340_cast_fu_557_p3;
wire   [31:0] zext_ln1340_fu_564_p1;
wire   [29:0] aSig_8_fu_573_p4;
wire   [29:0] select_ln1325_fu_582_p3;
wire   [8:0] sub_ln1330_fu_592_p2;
wire   [3:0] tmp_42_fu_606_p4;
wire   [0:0] z_15_fu_622_p2;
wire   [31:0] zext_ln129_fu_597_p1;
wire   [31:0] zext_ln135_3_fu_638_p1;
wire   [31:0] shl_ln135_3_fu_641_p2;
wire   [31:0] lshr_ln135_3_fu_632_p2;
wire   [0:0] trunc_ln135_3_fu_653_p1;
wire   [0:0] icmp_ln135_3_fu_647_p2;
wire   [30:0] tmp_7_fu_663_p4;
wire   [0:0] or_ln135_3_fu_657_p2;
wire   [31:0] zext_ln135_fu_695_p1;
wire   [31:0] shl_ln135_fu_698_p2;
wire   [31:0] lshr_ln135_fu_691_p2;
wire   [0:0] trunc_ln135_fu_709_p1;
wire   [0:0] icmp_ln135_fu_703_p2;
wire   [30:0] tmp_6_fu_719_p4;
wire   [0:0] or_ln135_fu_713_p2;
wire   [1:0] tmp_43_fu_741_p4;
wire   [28:0] trunc_ln1344_fu_751_p1;
wire   [31:0] aSig_10_fu_755_p4;
wire   [31:0] zSig_6_fu_765_p2;
wire   [8:0] zext_ln1296_4_fu_737_p1;
wire   [0:0] tmp_44_fu_783_p3;
wire   [8:0] zExp_6_fu_777_p2;
wire   [31:0] zSig_5_fu_771_p2;
wire   [31:0] add_ln765_fu_833_p2;
wire   [0:0] icmp_ln765_fu_827_p2;
wire   [8:0] sub_ln772_fu_861_p2;
wire   [31:0] zext_ln129_2_fu_867_p1;
wire   [4:0] trunc_ln1296_fu_807_p1;
wire   [31:0] zext_ln135_4_fu_877_p1;
wire   [31:0] shl_ln135_4_fu_881_p2;
wire   [31:0] lshr_ln135_4_fu_871_p2;
wire   [0:0] trunc_ln135_4_fu_893_p1;
wire   [0:0] icmp_ln135_4_fu_887_p2;
wire   [0:0] icmp_ln775_fu_937_p2;
wire   [2:0] tmp_49_fu_948_p4;
wire   [3:0] trunc_ln482_3_fu_958_p1;
wire   [1:0] tmp_50_fu_988_p4;
wire   [4:0] trunc_ln780_fu_998_p1;
wire   [31:0] add_ln781_fu_1018_p2;
wire   [0:0] icmp_ln782_fu_1034_p2;
wire   [1:0] zext_ln782_fu_1040_p1;
wire   [1:0] xor_ln782_fu_1044_p2;
wire   [24:0] trunc_ln_fu_1024_p4;
wire  signed [24:0] sext_ln782_fu_1050_p1;
wire   [0:0] icmp_ln783_fu_1060_p2;
wire   [8:0] select_ln783_fu_1065_p3;
wire   [31:0] shl_ln737_9_fu_1073_p3;
wire   [31:0] or_ln737_8_fu_1081_p4;
wire   [1:0] tmp_46_fu_1096_p4;
wire   [0:0] tmp_47_fu_1106_p3;
wire   [2:0] trunc_ln482_fu_1114_p1;
wire   [0:0] icmp_ln1321_fu_443_p2;
wire   [0:0] icmp_ln134_fu_521_p2;
reg   [31:0] ap_return_preg;
reg   [17:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_return_preg = 32'd0;
end

scaffold_fn_propagateFloat32NaN grp_propagateFloat32NaN_fu_281(
    .ap_ready(grp_propagateFloat32NaN_fu_281_ap_ready),
    .a(a),
    .b(b),
    .float_exception_flags_1_i(float_exception_flags_1_i),
    .float_exception_flags_1_o(grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o),
    .float_exception_flags_1_o_ap_vld(grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o_ap_vld),
    .ap_return(grp_propagateFloat32NaN_fu_281_ap_return),
    .ap_rst(ap_rst)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_return_preg <= ap_phi_mux_retval_0_phi_fu_261_p18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_3_fu_601_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        aSig_9_reg_165 <= zext_ln1325_fu_588_p1;
    end else if (((icmp_ln1307_fu_449_p2 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd1) & (ap_start == 1'b1) & (icmp_ln132_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        aSig_9_reg_165 <= zext_ln1296_fu_347_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        aSig_9_reg_165 <= zext_ln1296_reg_1189;
    end else if (((icmp_ln134_3_fu_616_p2 == 1'd0) & (icmp_ln132_3_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        aSig_9_reg_165 <= zext_ln137_3_fu_628_p1;
    end else if (((icmp_ln134_3_fu_616_p2 == 1'd1) & (icmp_ln132_3_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        aSig_9_reg_165 <= z_14_fu_673_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1307_fu_449_p2 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd1) & (ap_start == 1'b1) & (icmp_ln132_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        bSig_9_reg_148 <= zext_ln1312_fu_485_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        bSig_9_reg_148 <= zext_ln137_fu_688_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        bSig_9_reg_148 <= z_fu_729_p3;
    end else if ((((icmp_ln132_3_fu_601_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln134_3_fu_616_p2 == 1'd0) & (icmp_ln132_3_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln134_3_fu_616_p2 == 1'd1) & (icmp_ln132_3_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        bSig_9_reg_148 <= zext_ln1296_2_reg_1202;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln765_fu_847_p2) & (1'b1 == ap_CS_fsm_state14) & (tmp_48_fu_853_p3 == 1'd0) & (icmp_ln764_fu_821_p2 == 1'd0) & (icmp_ln763_fu_815_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln763_fu_815_p2 == 1'd0)))) begin
        empty_reg_219 <= zSig_8_reg_209;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        empty_reg_219 <= z_16_fu_923_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((((((icmp_ln1307_reg_1249 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd1) & (icmp_ln763_reg_1356 == 1'd0)) | ((icmp_ln1307_reg_1249 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd1) & (1'd0 == and_ln765_reg_1369) & (icmp_ln764_reg_1360 == 1'd0))) | ((icmp_ln1320_reg_1226 == 1'd0) & (tmp_40_reg_1214 == 1'd1) & (icmp_ln1306_reg_1210 == 1'd0) & (1'd0 == and_ln765_reg_1369) & (icmp_ln764_reg_1360 == 1'd0))) | ((icmp_ln1320_reg_1226 == 1'd0) & (tmp_40_reg_1214 == 1'd1) & (icmp_ln1306_reg_1210 == 1'd0) & (icmp_ln763_reg_1356 == 1'd0))) | (~(8'd0 == aExp_reg_1170) & ~(8'd255 == aExp_reg_1170) & (tmp_40_reg_1214 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd0) & (1'd0 == and_ln765_reg_1369) & (icmp_ln764_reg_1360 == 1'd0))) | (~(8'd0 == aExp_reg_1170) & ~(8'd255 == aExp_reg_1170) & (tmp_40_reg_1214 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd0) & (icmp_ln763_reg_1356 == 1'd0))))) begin
        retval_0_reg_258 <= add_ln737_fu_1089_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        retval_0_reg_258 <= or_ln737_4_fu_1138_p3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        retval_0_reg_258 <= or_ln8_fu_681_p3;
    end else if ((((icmp_ln1307_fu_449_p2 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd1) & (icmp_ln1308_fu_539_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_40_fu_377_p3 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd0) & (icmp_ln1334_fu_407_p2 == 1'd1) & (8'd255 == aExp_fu_301_p4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        retval_0_reg_258 <= a;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        retval_0_reg_258 <= or_ln_fu_548_p4;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        retval_0_reg_258 <= grp_propagateFloat32NaN_fu_281_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln765_fu_847_p2) & (1'b1 == ap_CS_fsm_state14) & (tmp_48_fu_853_p3 == 1'd0) & (icmp_ln764_fu_821_p2 == 1'd0) & (icmp_ln763_fu_815_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln763_fu_815_p2 == 1'd0)))) begin
        roundBits_6_reg_232 <= roundBits_fu_811_p1;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        roundBits_6_reg_232 <= roundBits_5_fu_930_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1307_fu_449_p2 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd1) & (ap_start == 1'b1) & (icmp_ln132_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        zExp_4_reg_182 <= {{a[30:23]}};
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11))) begin
        zExp_4_reg_182 <= aExp_reg_1170;
    end else if ((((icmp_ln132_3_fu_601_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln134_3_fu_616_p2 == 1'd0) & (icmp_ln132_3_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)) | ((icmp_ln134_3_fu_616_p2 == 1'd1) & (icmp_ln132_3_fu_601_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        zExp_4_reg_182 <= bExp_reg_1182;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln765_fu_847_p2) & (1'b1 == ap_CS_fsm_state14) & (tmp_48_fu_853_p3 == 1'd0) & (icmp_ln764_fu_821_p2 == 1'd0) & (icmp_ln763_fu_815_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln763_fu_815_p2 == 1'd0)))) begin
        zExp_assign_6_reg_243 <= zExp_reg_199;
    end else if (((1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        zExp_assign_6_reg_243 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        zExp_reg_199 <= zExp_7_fu_791_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        zExp_reg_199 <= zext_ln1295_reg_1177;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        zSig_8_reg_209 <= zSig_7_fu_799_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        zSig_8_reg_209 <= zSig_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        aExp_reg_1170 <= {{a[30:23]}};
        bExp_reg_1182 <= {{b[30:23]}};
        expDiff_8_reg_1235 <= expDiff_8_fu_431_p3;
        icmp_ln1306_reg_1210 <= icmp_ln1306_fu_371_p2;
        icmp_ln1307_reg_1249 <= icmp_ln1307_fu_449_p2;
        icmp_ln1320_reg_1226 <= icmp_ln1320_fu_413_p2;
        icmp_ln1325_reg_1230 <= icmp_ln1325_fu_419_p2;
        sub_ln135_reg_1276 <= sub_ln135_fu_533_p2;
        tmp_40_reg_1214 <= expDiff_fu_329_p2[32'd8];
        trunc_ln1294_1_reg_1165 <= trunc_ln1294_1_fu_297_p1;
        trunc_ln1297_2_reg_1241 <= trunc_ln1297_2_fu_439_p1;
        zSig_assign_reg_1218 <= {{add_ln1339_fu_385_p2[29:6]}};
        z_13_reg_1271 <= z_13_fu_527_p2;
        zext_ln1295_reg_1177[7 : 0] <= zext_ln1295_fu_311_p1[7 : 0];
        zext_ln1296_1_reg_1196[28 : 6] <= zext_ln1296_1_fu_351_p1[28 : 6];
        zext_ln1296_2_reg_1202[28 : 6] <= zext_ln1296_2_fu_363_p1[28 : 6];
        zext_ln1296_reg_1189[28 : 6] <= zext_ln1296_fu_347_p1[28 : 6];
        zext_ln1297_reg_1260[7 : 0] <= zext_ln1297_fu_497_p1[7 : 0];
        zext_ln1312_reg_1253[29 : 6] <= zext_ln1312_fu_485_p1[29 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        and_ln765_reg_1369 <= and_ln765_fu_847_p2;
        icmp_ln763_reg_1356 <= icmp_ln763_fu_815_p2;
        icmp_ln764_reg_1360 <= icmp_ln764_fu_821_p2;
        or_ln135_4_reg_1377 <= or_ln135_4_fu_897_p2;
        tmp_45_reg_1364 <= add_ln765_fu_833_p2[32'd31];
        tmp_48_reg_1373 <= zExp_reg_199[32'd8];
        tmp_8_reg_1383 <= {{lshr_ln135_4_fu_871_p2[31:1]}};
        tmp_9_cast_reg_1388 <= {{lshr_ln135_4_fu_871_p2[6:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        and_ln782_reg_1399 <= and_ln782_fu_1054_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        ap_phi_mux_empty_phi_fu_222_p6 = z_16_fu_923_p3;
    end else begin
        ap_phi_mux_empty_phi_fu_222_p6 = empty_reg_219;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (((((((icmp_ln1307_reg_1249 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd1) & (icmp_ln763_reg_1356 == 1'd0)) | ((icmp_ln1307_reg_1249 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd1) & (1'd0 == and_ln765_reg_1369) & (icmp_ln764_reg_1360 == 1'd0))) | ((icmp_ln1320_reg_1226 == 1'd0) & (tmp_40_reg_1214 == 1'd1) & (icmp_ln1306_reg_1210 == 1'd0) & (1'd0 == and_ln765_reg_1369) & (icmp_ln764_reg_1360 == 1'd0))) | ((icmp_ln1320_reg_1226 == 1'd0) & (tmp_40_reg_1214 == 1'd1) & (icmp_ln1306_reg_1210 == 1'd0) & (icmp_ln763_reg_1356 == 1'd0))) | (~(8'd0 == aExp_reg_1170) & ~(8'd255 == aExp_reg_1170) & (tmp_40_reg_1214 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd0) & (1'd0 == and_ln765_reg_1369) & (icmp_ln764_reg_1360 == 1'd0))) | (~(8'd0 == aExp_reg_1170) & ~(8'd255 == aExp_reg_1170) & (tmp_40_reg_1214 == 1'd0) & (icmp_ln1306_reg_1210 == 1'd0) & (icmp_ln763_reg_1356 == 1'd0))))) begin
        ap_phi_mux_retval_0_phi_fu_261_p18 = add_ln737_fu_1089_p2;
    end else begin
        ap_phi_mux_retval_0_phi_fu_261_p18 = retval_0_reg_258;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        ap_phi_mux_roundBits_6_phi_fu_235_p6 = roundBits_5_fu_930_p3;
    end else begin
        ap_phi_mux_roundBits_6_phi_fu_235_p6 = roundBits_6_reg_232;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_return = ap_phi_mux_retval_0_phi_fu_261_p18;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((or_ln775_fu_943_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        ap_sig_allocacmp_float_exception_flags_1_load_5 = or_ln482_5_fu_962_p4;
    end else begin
        ap_sig_allocacmp_float_exception_flags_1_load_5 = float_exception_flags_1_i;
    end
end

always @ (*) begin
    if (((icmp_ln779_fu_978_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        float_exception_flags_1_o = or_ln1_fu_1002_p4;
    end else if (((or_ln775_fu_943_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1))) begin
        float_exception_flags_1_o = or_ln482_5_fu_962_p4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        float_exception_flags_1_o = or_ln9_fu_1118_p6;
    end else if ((((grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state9)) | ((grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        float_exception_flags_1_o = grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o;
    end else begin
        float_exception_flags_1_o = float_exception_flags_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((icmp_ln779_fu_978_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((or_ln775_fu_943_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15) & (tmp_48_reg_1373 == 1'd1) & (icmp_ln763_reg_1356 == 1'd1)))) begin
        float_exception_flags_1_o_ap_vld = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        float_exception_flags_1_o_ap_vld = grp_propagateFloat32NaN_fu_281_float_exception_flags_1_o_ap_vld;
    end else begin
        float_exception_flags_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln1307_fu_449_p2 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd1) & (icmp_ln1308_fu_539_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((icmp_ln1307_fu_449_p2 == 1'd0) & (icmp_ln134_fu_521_p2 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd1) & (ap_start == 1'b1) & (icmp_ln132_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else if (((icmp_ln1307_fu_449_p2 == 1'd0) & (icmp_ln134_fu_521_p2 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd1) & (ap_start == 1'b1) & (icmp_ln132_fu_505_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((icmp_ln1307_fu_449_p2 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd1) & (ap_start == 1'b1) & (icmp_ln132_fu_505_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((icmp_ln1321_fu_443_p2 == 1'd1) & (icmp_ln1320_fu_413_p2 == 1'd1) & (tmp_40_fu_377_p3 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((icmp_ln1321_fu_443_p2 == 1'd0) & (icmp_ln1320_fu_413_p2 == 1'd1) & (tmp_40_fu_377_p3 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((icmp_ln1320_fu_413_p2 == 1'd0) & (tmp_40_fu_377_p3 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((icmp_ln1307_fu_449_p2 == 1'd1) & (icmp_ln1306_fu_371_p2 == 1'd1) & (icmp_ln1308_fu_539_p2 == 1'd1)) | ((tmp_40_fu_377_p3 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd0) & (icmp_ln1334_fu_407_p2 == 1'd1) & (8'd255 == aExp_fu_301_p4))))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((tmp_40_fu_377_p3 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd0) & (icmp_ln1334_fu_407_p2 == 1'd0) & (8'd255 == aExp_fu_301_p4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~(8'd0 == aExp_fu_301_p4) & ~(8'd255 == aExp_fu_301_p4) & (tmp_40_fu_377_p3 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((tmp_40_fu_377_p3 == 1'd0) & (icmp_ln1306_fu_371_p2 == 1'd0) & (8'd0 == aExp_fu_301_p4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (((icmp_ln764_fu_821_p2 == 1'd1) & (icmp_ln763_fu_815_p2 == 1'd1)) | ((1'd1 == and_ln765_fu_847_p2) & (icmp_ln763_fu_815_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aExp_fu_301_p4 = {{a[30:23]}};

assign aSig_10_fu_755_p4 = {{{tmp_43_fu_741_p4}, {1'd1}}, {trunc_ln1344_fu_751_p1}};

assign aSig_8_fu_573_p4 = {{{{1'd1}, {trunc_ln1294_1_reg_1165}}}, {6'd0}};

assign aSig_fu_339_p3 = {{trunc_ln1294_1_fu_297_p1}, {6'd0}};

assign add_ln1339_fu_385_p2 = (zext_ln1296_3_fu_367_p1 + zext_ln1296_1_fu_351_p1);

assign add_ln737_fu_1089_p2 = (shl_ln737_9_fu_1073_p3 + or_ln737_8_fu_1081_p4);

assign add_ln765_fu_833_p2 = (zSig_8_reg_209 + 32'd64);

assign add_ln781_fu_1018_p2 = (ap_phi_mux_empty_phi_fu_222_p6 + 32'd64);

assign and_ln765_fu_847_p2 = (tmp_45_fu_839_p3 & icmp_ln765_fu_827_p2);

assign and_ln782_fu_1054_p2 = (trunc_ln_fu_1024_p4 & sext_ln782_fu_1050_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bExp_fu_315_p4 = {{b[30:23]}};

assign bSig_8_fu_467_p4 = {{{{1'd1}, {trunc_ln1294_fu_293_p1}}}, {6'd0}};

assign bSig_fu_355_p3 = {{trunc_ln1294_fu_293_p1}, {6'd0}};

assign expDiff_5_fu_461_p2 = (trunc_ln1297_fu_335_p1 + 8'd255);

assign expDiff_6_fu_489_p3 = ((icmp_ln1312_fu_455_p2[0:0] == 1'b1) ? expDiff_5_fu_461_p2 : trunc_ln1297_fu_335_p1);

assign expDiff_7_fu_425_p2 = (expDiff_fu_329_p2 + 9'd1);

assign expDiff_8_fu_431_p3 = ((icmp_ln1325_fu_419_p2[0:0] == 1'b1) ? expDiff_7_fu_425_p2 : expDiff_fu_329_p2);

assign expDiff_fu_329_p2 = (zext_ln1295_fu_311_p1 - zext_ln1295_1_fu_325_p1);

assign icmp_ln1306_fu_371_p2 = (($signed(expDiff_fu_329_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1307_fu_449_p2 = ((aExp_fu_301_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1308_fu_539_p2 = ((trunc_ln1294_1_fu_297_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1312_fu_455_p2 = ((bExp_fu_315_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1320_fu_413_p2 = ((bExp_fu_315_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1321_fu_443_p2 = ((trunc_ln1294_fu_293_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1325_fu_419_p2 = ((aExp_fu_301_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_3_fu_601_p2 = ((expDiff_8_reg_1235 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_505_p2 = ((expDiff_6_fu_489_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1334_fu_407_p2 = ((or_ln1334_fu_401_p2 == 29'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_3_fu_616_p2 = (($signed(tmp_42_fu_606_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_521_p2 = ((tmp_41_fu_511_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_3_fu_647_p2 = ((shl_ln135_3_fu_641_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_4_fu_887_p2 = ((shl_ln135_4_fu_881_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_703_p2 = ((shl_ln135_fu_698_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln763_fu_815_p2 = ((zExp_reg_199 > 9'd252) ? 1'b1 : 1'b0);

assign icmp_ln764_fu_821_p2 = (($signed(zExp_reg_199) > $signed(9'd253)) ? 1'b1 : 1'b0);

assign icmp_ln765_fu_827_p2 = ((zExp_reg_199 == 9'd253) ? 1'b1 : 1'b0);

assign icmp_ln775_fu_937_p2 = ((roundBits_5_fu_930_p3 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln779_fu_978_p2 = ((ap_phi_mux_roundBits_6_phi_fu_235_p6 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln782_fu_1034_p2 = ((ap_phi_mux_roundBits_6_phi_fu_235_p6 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln783_fu_1060_p2 = ((and_ln782_reg_1399 == 25'd0) ? 1'b1 : 1'b0);

assign lshr_ln135_3_fu_632_p2 = zext_ln1325_fu_588_p1 >> zext_ln129_fu_597_p1;

assign lshr_ln135_4_fu_871_p2 = zSig_8_reg_209 >> zext_ln129_2_fu_867_p1;

assign lshr_ln135_fu_691_p2 = zext_ln1312_reg_1253 >> zext_ln1297_reg_1260;

assign or_ln1334_fu_401_p2 = (bSig_fu_355_p3 | aSig_fu_339_p3);

assign or_ln135_3_fu_657_p2 = (trunc_ln135_3_fu_653_p1 | icmp_ln135_3_fu_647_p2);

assign or_ln135_4_fu_897_p2 = (trunc_ln135_4_fu_893_p1 | icmp_ln135_4_fu_887_p2);

assign or_ln135_fu_713_p2 = (trunc_ln135_fu_709_p1 | icmp_ln135_fu_703_p2);

assign or_ln1_fu_1002_p4 = {{{tmp_50_fu_988_p4}, {1'd1}}, {trunc_ln780_fu_998_p1}};

assign or_ln482_5_fu_962_p4 = {{{tmp_49_fu_948_p4}, {1'd1}}, {trunc_ln482_3_fu_958_p1}};

assign or_ln737_4_fu_1138_p3 = {{zSign}, {31'd2139095040}};

assign or_ln737_8_fu_1081_p4 = {{{zSign}, {6'd0}}, {and_ln782_reg_1399}};

assign or_ln775_fu_943_p2 = (tmp_45_reg_1364 | icmp_ln775_fu_937_p2);

assign or_ln8_fu_681_p3 = {{zSign}, {31'd2139095040}};

assign or_ln9_fu_1118_p6 = {{{{{tmp_46_fu_1096_p4}, {1'd1}}, {tmp_47_fu_1106_p3}}, {1'd1}}, {trunc_ln482_fu_1114_p1}};

assign or_ln_fu_548_p4 = {{{zSign}, {1'd0}}, {zext_ln1339_fu_545_p1}};

assign roundBits_5_fu_930_p3 = {{tmp_9_cast_reg_1388}, {or_ln135_4_reg_1377}};

assign roundBits_fu_811_p1 = zSig_8_reg_209[6:0];

assign select_ln1312_fu_477_p3 = ((icmp_ln1312_fu_455_p2[0:0] == 1'b1) ? zext_ln1296_3_fu_367_p1 : bSig_8_fu_467_p4);

assign select_ln1325_fu_582_p3 = ((icmp_ln1325_reg_1230[0:0] == 1'b1) ? zext_ln1296_1_reg_1196 : aSig_8_fu_573_p4);

assign select_ln783_fu_1065_p3 = ((icmp_ln783_fu_1060_p2[0:0] == 1'b1) ? 9'd0 : zExp_assign_6_reg_243);

assign sext_ln782_fu_1050_p1 = $signed(xor_ln782_fu_1044_p2);

assign shl_ln135_3_fu_641_p2 = zext_ln1325_fu_588_p1 << zext_ln135_3_fu_638_p1;

assign shl_ln135_4_fu_881_p2 = zSig_8_reg_209 << zext_ln135_4_fu_877_p1;

assign shl_ln135_fu_698_p2 = zext_ln1312_reg_1253 << zext_ln135_fu_695_p1;

assign shl_ln737_9_fu_1073_p3 = {{select_ln783_fu_1065_p3}, {23'd0}};

assign sub_ln1330_fu_592_p2 = (9'd0 - expDiff_8_reg_1235);

assign sub_ln135_fu_533_p2 = (5'd0 - trunc_ln1297_1_fu_501_p1);

assign sub_ln772_fu_861_p2 = (9'd0 - zExp_reg_199);

assign tmp_40_fu_377_p3 = expDiff_fu_329_p2[32'd8];

assign tmp_41_fu_511_p4 = {{expDiff_6_fu_489_p3[7:5]}};

assign tmp_42_fu_606_p4 = {{sub_ln1330_fu_592_p2[8:5]}};

assign tmp_43_fu_741_p4 = {{aSig_9_reg_165[31:30]}};

assign tmp_44_fu_783_p3 = zSig_6_fu_765_p2[32'd30];

assign tmp_45_fu_839_p3 = add_ln765_fu_833_p2[32'd31];

assign tmp_46_fu_1096_p4 = {{float_exception_flags_1_i[7:6]}};

assign tmp_47_fu_1106_p3 = float_exception_flags_1_i[32'd4];

assign tmp_48_fu_853_p3 = zExp_reg_199[32'd8];

assign tmp_49_fu_948_p4 = {{float_exception_flags_1_i[7:5]}};

assign tmp_50_fu_988_p4 = {{ap_sig_allocacmp_float_exception_flags_1_load_5[7:6]}};

assign tmp_6_fu_719_p4 = {{lshr_ln135_fu_691_p2[31:1]}};

assign tmp_7_fu_663_p4 = {{lshr_ln135_3_fu_632_p2[31:1]}};

assign trunc_ln1294_1_fu_297_p1 = a[22:0];

assign trunc_ln1294_fu_293_p1 = b[22:0];

assign trunc_ln1296_fu_807_p1 = zExp_reg_199[4:0];

assign trunc_ln1297_1_fu_501_p1 = expDiff_6_fu_489_p3[4:0];

assign trunc_ln1297_2_fu_439_p1 = expDiff_8_fu_431_p3[4:0];

assign trunc_ln1297_fu_335_p1 = expDiff_fu_329_p2[7:0];

assign trunc_ln1344_fu_751_p1 = aSig_9_reg_165[28:0];

assign trunc_ln135_3_fu_653_p1 = lshr_ln135_3_fu_632_p2[0:0];

assign trunc_ln135_4_fu_893_p1 = lshr_ln135_4_fu_871_p2[0:0];

assign trunc_ln135_fu_709_p1 = lshr_ln135_fu_691_p2[0:0];

assign trunc_ln482_3_fu_958_p1 = float_exception_flags_1_i[3:0];

assign trunc_ln482_fu_1114_p1 = float_exception_flags_1_i[2:0];

assign trunc_ln780_fu_998_p1 = ap_sig_allocacmp_float_exception_flags_1_load_5[4:0];

assign trunc_ln_fu_1024_p4 = {{add_ln781_fu_1018_p2[31:7]}};

assign xor_ln782_fu_1044_p2 = (zext_ln782_fu_1040_p1 ^ 2'd3);

assign zExp_6_fu_777_p2 = ($signed(zext_ln1296_4_fu_737_p1) + $signed(9'd511));

assign zExp_7_fu_791_p3 = ((tmp_44_fu_783_p3[0:0] == 1'b1) ? zext_ln1296_4_fu_737_p1 : zExp_6_fu_777_p2);

assign zSig_5_fu_771_p2 = zSig_6_fu_765_p2 << 32'd1;

assign zSig_6_fu_765_p2 = (aSig_10_fu_755_p4 + bSig_9_reg_148);

assign zSig_7_fu_799_p3 = ((tmp_44_fu_783_p3[0:0] == 1'b1) ? zSig_6_fu_765_p2 : zSig_5_fu_771_p2);

assign zSig_fu_568_p2 = (zext_ln1340_fu_564_p1 + zext_ln1296_2_reg_1202);

assign z_13_fu_527_p2 = ((select_ln1312_fu_477_p3 != 30'd0) ? 1'b1 : 1'b0);

assign z_14_fu_673_p3 = {{tmp_7_fu_663_p4}, {or_ln135_3_fu_657_p2}};

assign z_15_fu_622_p2 = ((select_ln1325_fu_582_p3 != 30'd0) ? 1'b1 : 1'b0);

assign z_16_fu_923_p3 = {{tmp_8_reg_1383}, {or_ln135_4_reg_1377}};

assign z_fu_729_p3 = {{tmp_6_fu_719_p4}, {or_ln135_fu_713_p2}};

assign zext_ln1295_1_fu_325_p1 = bExp_fu_315_p4;

assign zext_ln1295_fu_311_p1 = aExp_fu_301_p4;

assign zext_ln1296_1_fu_351_p1 = aSig_fu_339_p3;

assign zext_ln1296_2_fu_363_p1 = bSig_fu_355_p3;

assign zext_ln1296_3_fu_367_p1 = bSig_fu_355_p3;

assign zext_ln1296_4_fu_737_p1 = zExp_4_reg_182;

assign zext_ln1296_fu_347_p1 = aSig_fu_339_p3;

assign zext_ln1297_fu_497_p1 = expDiff_6_fu_489_p3;

assign zext_ln129_2_fu_867_p1 = sub_ln772_fu_861_p2;

assign zext_ln129_fu_597_p1 = sub_ln1330_fu_592_p2;

assign zext_ln1312_fu_485_p1 = select_ln1312_fu_477_p3;

assign zext_ln1325_fu_588_p1 = select_ln1325_fu_582_p3;

assign zext_ln1339_fu_545_p1 = zSig_assign_reg_1218;

assign zext_ln1340_cast_fu_557_p3 = {{1'd1}, {zext_ln1296_1_reg_1196}};

assign zext_ln1340_fu_564_p1 = zext_ln1340_cast_fu_557_p3;

assign zext_ln135_3_fu_638_p1 = trunc_ln1297_2_reg_1241;

assign zext_ln135_4_fu_877_p1 = trunc_ln1296_fu_807_p1;

assign zext_ln135_fu_695_p1 = sub_ln135_reg_1276;

assign zext_ln137_3_fu_628_p1 = z_15_fu_622_p2;

assign zext_ln137_fu_688_p1 = z_13_reg_1271;

assign zext_ln782_fu_1040_p1 = icmp_ln782_fu_1034_p2;

always @ (posedge ap_clk) begin
    zext_ln1295_reg_1177[8] <= 1'b0;
    zext_ln1296_reg_1189[5:0] <= 6'b000000;
    zext_ln1296_reg_1189[31:29] <= 3'b000;
    zext_ln1296_1_reg_1196[5:0] <= 6'b000000;
    zext_ln1296_1_reg_1196[29] <= 1'b0;
    zext_ln1296_2_reg_1202[5:0] <= 6'b000000;
    zext_ln1296_2_reg_1202[31:29] <= 3'b000;
    zext_ln1312_reg_1253[5:0] <= 6'b000000;
    zext_ln1312_reg_1253[31:30] <= 2'b00;
    zext_ln1297_reg_1260[31:8] <= 24'b000000000000000000000000;
end

endmodule //scaffold_fn_addFloat32Sigs
