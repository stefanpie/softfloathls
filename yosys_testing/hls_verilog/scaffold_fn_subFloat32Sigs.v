// ==============================================================
// Generated by Vitis HLS v2024.1.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module scaffold_fn_subFloat32Sigs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a,
        b,
        zSign,
        float_exception_flags_1_i,
        float_exception_flags_1_o,
        float_exception_flags_1_o_ap_vld,
        countLeadingZerosHigh_address0,
        countLeadingZerosHigh_ce0,
        countLeadingZerosHigh_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] a;
input  [31:0] b;
input  [0:0] zSign;
input  [7:0] float_exception_flags_1_i;
output  [7:0] float_exception_flags_1_o;
output   float_exception_flags_1_o_ap_vld;
output  [7:0] countLeadingZerosHigh_address0;
output   countLeadingZerosHigh_ce0;
input  [3:0] countLeadingZerosHigh_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] float_exception_flags_1_o;
reg float_exception_flags_1_o_ap_vld;
reg[31:0] ap_return;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [22:0] trunc_ln1354_fu_377_p1;
reg   [22:0] trunc_ln1354_reg_1492;
wire   [22:0] trunc_ln1354_1_fu_381_p1;
reg   [22:0] trunc_ln1354_1_reg_1497;
wire   [7:0] aExp_fu_385_p4;
reg   [7:0] aExp_reg_1502;
wire   [7:0] bExp_fu_399_p4;
reg   [7:0] bExp_reg_1508;
wire   [29:0] aSig_fu_423_p3;
reg   [29:0] aSig_reg_1514;
wire   [31:0] zext_ln1356_fu_431_p1;
reg   [31:0] zext_ln1356_reg_1520;
wire   [30:0] zext_ln1356_1_fu_435_p1;
reg   [30:0] zext_ln1356_1_reg_1525;
wire   [29:0] bSig_fu_439_p3;
reg   [29:0] bSig_reg_1530;
wire   [31:0] zext_ln1356_2_fu_447_p1;
reg   [31:0] zext_ln1356_2_reg_1536;
wire   [30:0] zext_ln1356_3_fu_451_p1;
reg   [30:0] zext_ln1356_3_reg_1541;
wire   [0:0] icmp_ln1366_fu_455_p2;
reg   [0:0] icmp_ln1366_reg_1546;
wire   [0:0] tmp_15_fu_461_p3;
reg   [0:0] tmp_15_reg_1550;
wire   [0:0] icmp_ln1386_fu_505_p2;
reg   [0:0] icmp_ln1386_reg_1557;
wire   [30:0] select_ln1391_fu_533_p3;
reg   [30:0] select_ln1391_reg_1561;
wire   [8:0] expDiff_4_fu_541_p3;
reg   [8:0] expDiff_4_reg_1567;
wire   [4:0] trunc_ln1357_2_fu_549_p1;
reg   [4:0] trunc_ln1357_2_reg_1573;
wire   [0:0] icmp_ln1404_fu_559_p2;
reg   [0:0] icmp_ln1404_reg_1581;
wire   [30:0] select_ln1409_fu_587_p3;
reg   [30:0] select_ln1409_reg_1585;
wire   [7:0] expDiff_2_fu_595_p3;
reg   [7:0] expDiff_2_reg_1591;
wire   [0:0] icmp_ln134_fu_617_p2;
reg   [0:0] icmp_ln134_reg_1597;
wire   [4:0] sub_ln135_fu_623_p2;
reg   [4:0] sub_ln135_reg_1602;
wire   [31:0] grp_propagateFloat32NaN_fu_360_ap_return;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1380_fu_635_p2;
reg   [0:0] icmp_ln1380_reg_1615;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1382_fu_639_p2;
reg   [0:0] icmp_ln1382_reg_1619;
wire   [31:0] z_9_fu_754_p9;
wire    ap_CS_fsm_state4;
wire   [30:0] bSig_4_fu_774_p4;
wire   [0:0] grp_fu_372_p2;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln441_fu_815_p2;
reg   [0:0] icmp_ln441_reg_1638;
wire    ap_CS_fsm_state6;
wire   [31:0] or_ln_fu_821_p3;
wire    ap_CS_fsm_state7;
wire   [31:0] z_10_fu_917_p9;
wire    ap_CS_fsm_state8;
wire   [30:0] aSig_1_fu_937_p4;
wire   [8:0] zExp_fu_950_p2;
reg   [8:0] zExp_reg_1665;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln445_fu_979_p2;
reg   [0:0] icmp_ln445_reg_1671;
wire  signed [5:0] shiftCount_3_fu_1043_p2;
reg  signed [5:0] shiftCount_3_reg_1681;
wire    ap_CS_fsm_state10;
wire   [31:0] shl_ln792_fu_1053_p2;
reg   [31:0] shl_ln792_reg_1686;
wire   [6:0] roundBits_fu_1059_p1;
reg   [6:0] roundBits_reg_1697;
wire   [8:0] sub_ln792_fu_1066_p2;
reg   [8:0] sub_ln792_reg_1703;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln763_fu_1075_p2;
reg   [0:0] icmp_ln763_reg_1710;
wire   [0:0] icmp_ln764_fu_1081_p2;
reg   [0:0] icmp_ln764_reg_1714;
wire   [0:0] tmp_21_fu_1098_p3;
reg   [0:0] tmp_21_reg_1718;
wire   [0:0] and_ln765_fu_1106_p2;
reg   [0:0] and_ln765_reg_1723;
wire   [0:0] tmp_23_fu_1112_p3;
reg   [0:0] tmp_23_reg_1727;
wire   [0:0] icmp_ln132_2_fu_1130_p2;
reg   [0:0] icmp_ln132_2_reg_1731;
wire   [0:0] icmp_ln134_2_fu_1145_p2;
reg   [0:0] icmp_ln134_2_reg_1737;
wire   [0:0] or_ln135_2_fu_1175_p2;
reg   [0:0] or_ln135_2_reg_1742;
reg   [30:0] tmp_4_reg_1747;
wire   [24:0] and_ln782_fu_1382_p2;
reg   [24:0] and_ln782_reg_1758;
wire    ap_CS_fsm_state12;
wire   [31:0] or_ln737_1_fu_1467_p3;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    grp_propagateFloat32NaN_fu_360_ap_ready;
wire   [7:0] grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o;
wire    grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o_ap_vld;
reg   [7:0] bExp_1_reg_185;
reg   [7:0] aExp_1_reg_197;
reg   [31:0] aSig_4_reg_209;
reg   [30:0] empty_reg_218;
reg   [7:0] bExp_3_reg_227;
reg   [31:0] bSig_3_reg_238;
reg   [30:0] empty_17_reg_247;
reg   [7:0] aExp_3_reg_256;
wire   [31:0] zSig_fu_798_p2;
reg   [31:0] ap_phi_mux_zSig_2_phi_fu_270_p4;
reg   [31:0] zSig_2_reg_267;
wire   [31:0] zSig_1_fu_787_p2;
reg   [7:0] zExp_2_reg_277;
reg   [0:0] zSign_assign_1_reg_288;
wire   [31:0] z_8_fu_1239_p9;
reg   [31:0] ap_phi_mux_empty_18_phi_fu_301_p6;
reg   [31:0] empty_18_reg_298;
wire   [6:0] roundBits_1_fu_1259_p1;
reg   [6:0] ap_phi_mux_roundBits_2_phi_fu_312_p6;
reg   [6:0] roundBits_2_reg_309;
reg   [8:0] zExp_assign_2_reg_320;
reg   [31:0] ap_phi_mux_retval_0_phi_fu_338_p18;
reg   [31:0] retval_0_reg_333;
wire   [0:0] icmp_ln1371_fu_475_p2;
wire   [31:0] add_ln737_fu_1418_p2;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln1405_fu_629_p2;
wire   [63:0] zext_ln449_fu_1003_p1;
wire   [7:0] or_ln482_1_fu_1447_p6;
wire   [7:0] or_ln482_2_fu_1290_p4;
wire   [7:0] or_ln2_fu_1330_p4;
wire   [7:0] or_ln1_fu_491_p3;
wire   [0:0] and_ln775_fu_1270_p2;
reg   [7:0] ap_sig_allocacmp_float_exception_flags_1_load_3;
wire   [0:0] icmp_ln779_fu_1306_p2;
reg    countLeadingZerosHigh_ce0_local;
wire   [8:0] zext_ln1355_fu_395_p1;
wire   [8:0] zext_ln1355_1_fu_409_p1;
wire   [8:0] expDiff_fu_413_p2;
wire   [29:0] or_ln1371_fu_469_p2;
wire   [6:0] tmp_7_fu_481_p4;
wire   [0:0] icmp_ln1391_fu_511_p2;
wire   [30:0] aSig_2_fu_523_p4;
wire   [8:0] expDiff_3_fu_517_p2;
wire   [7:0] trunc_ln1357_fu_419_p1;
wire   [0:0] icmp_ln1409_fu_565_p2;
wire   [30:0] bSig_1_fu_577_p4;
wire   [7:0] expDiff_1_fu_571_p2;
wire   [2:0] tmp_17_fu_607_p4;
wire   [4:0] trunc_ln1357_1_fu_603_p1;
wire   [8:0] sub_ln1396_fu_646_p2;
wire   [3:0] tmp_18_fu_660_p4;
wire   [31:0] zext_ln1391_fu_643_p1;
wire   [31:0] zext_ln129_fu_651_p1;
wire   [31:0] zext_ln135_1_fu_682_p1;
wire   [31:0] shl_ln135_1_fu_685_p2;
wire   [31:0] lshr_ln135_1_fu_676_p2;
wire   [0:0] trunc_ln135_1_fu_697_p1;
wire   [0:0] icmp_ln135_1_fu_691_p2;
wire   [30:0] tmp_3_fu_707_p4;
wire   [0:0] or_ln135_1_fu_701_p2;
wire   [0:0] z_4_fu_725_p2;
wire   [0:0] icmp_ln132_1_fu_655_p2;
wire   [0:0] icmp_ln134_1_fu_670_p2;
wire   [0:0] xor_ln132_1_fu_734_p2;
wire   [0:0] and_ln134_1_fu_740_p2;
wire   [31:0] z_9_fu_754_p4;
wire   [31:0] z_9_fu_754_p6;
wire   [31:0] z_9_fu_754_p7;
wire   [1:0] z_9_fu_754_p8;
wire   [31:0] zext_ln1356_5_fu_783_p1;
wire   [31:0] zext_ln1356_4_fu_794_p1;
wire   [15:0] tmp_19_fu_805_p4;
wire   [31:0] zext_ln1409_fu_829_p1;
wire   [31:0] zext_ln1357_fu_832_p1;
wire   [31:0] zext_ln135_fu_846_p1;
wire   [31:0] shl_ln135_fu_849_p2;
wire   [31:0] lshr_ln135_fu_840_p2;
wire   [0:0] trunc_ln135_fu_861_p1;
wire   [0:0] icmp_ln135_fu_855_p2;
wire   [30:0] tmp_2_fu_871_p4;
wire   [0:0] or_ln135_fu_865_p2;
wire   [0:0] z_1_fu_889_p2;
wire   [0:0] icmp_ln132_fu_835_p2;
wire   [0:0] xor_ln132_fu_898_p2;
wire   [0:0] and_ln134_fu_904_p2;
wire   [31:0] z_10_fu_917_p4;
wire   [31:0] z_10_fu_917_p6;
wire   [31:0] z_10_fu_917_p7;
wire   [1:0] z_10_fu_917_p8;
wire   [8:0] zext_ln1354_fu_946_p1;
wire   [31:0] shl_ln443_fu_956_p2;
wire   [31:0] select_ln441_1_fu_962_p3;
wire   [7:0] tmp_20_fu_969_p4;
wire   [7:0] tmp_9_fu_985_p4;
wire   [7:0] select_ln445_fu_995_p3;
wire   [4:0] shiftCount_1_fu_1015_p3;
wire   [4:0] shiftCount_fu_1008_p3;
wire   [4:0] shiftCount_2_fu_1022_p3;
wire   [5:0] zext_ln445_fu_1029_p1;
wire   [5:0] add_ln791_fu_1037_p2;
wire   [5:0] zext_ln791_fu_1033_p1;
wire  signed [31:0] sext_ln792_fu_1049_p1;
wire  signed [8:0] sext_ln792_1_fu_1063_p1;
wire   [31:0] add_ln765_fu_1093_p2;
wire   [0:0] icmp_ln765_fu_1087_p2;
wire   [8:0] sub_ln772_fu_1120_p2;
wire   [1:0] tmp_24_fu_1135_p4;
wire   [31:0] zext_ln129_1_fu_1126_p1;
wire   [4:0] trunc_ln792_fu_1071_p1;
wire   [31:0] zext_ln135_2_fu_1156_p1;
wire   [31:0] shl_ln135_2_fu_1160_p2;
wire   [31:0] lshr_ln135_2_fu_1151_p2;
wire   [0:0] trunc_ln135_2_fu_1171_p1;
wire   [0:0] icmp_ln135_2_fu_1165_p2;
wire   [0:0] icmp_ln771_fu_1191_p2;
wire   [0:0] xor_ln771_fu_1196_p2;
wire   [0:0] z_7_fu_1213_p2;
wire   [0:0] xor_ln132_2_fu_1222_p2;
wire   [0:0] and_ln134_2_fu_1227_p2;
wire   [31:0] z_8_fu_1239_p4;
wire   [31:0] z_8_fu_1239_p6;
wire   [31:0] z_8_fu_1239_p7;
wire   [1:0] z_8_fu_1239_p8;
wire   [0:0] or_ln771_fu_1201_p2;
wire   [0:0] icmp_ln775_fu_1264_p2;
wire   [2:0] tmp_6_fu_1276_p4;
wire   [3:0] trunc_ln482_1_fu_1286_p1;
wire   [1:0] tmp_8_fu_1316_p4;
wire   [4:0] trunc_ln780_fu_1326_p1;
wire   [31:0] add_ln781_fu_1346_p2;
wire   [0:0] icmp_ln782_fu_1362_p2;
wire   [1:0] zext_ln782_fu_1368_p1;
wire   [1:0] xor_ln782_fu_1372_p2;
wire   [24:0] trunc_ln5_fu_1352_p4;
wire  signed [24:0] sext_ln782_fu_1378_p1;
wire   [0:0] icmp_ln783_fu_1388_p2;
wire   [8:0] select_ln783_fu_1393_p3;
wire   [31:0] shl_ln737_2_fu_1401_p3;
wire   [31:0] or_ln737_2_fu_1409_p4;
wire   [1:0] tmp_5_fu_1425_p4;
wire   [0:0] tmp_22_fu_1435_p3;
wire   [2:0] trunc_ln482_fu_1443_p1;
wire   [0:0] icmp_ln1387_fu_553_p2;
reg   [31:0] ap_return_preg;
reg   [14:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_condition_1154;
reg    ap_condition_274;
reg    ap_condition_284;
wire  signed [1:0] z_9_fu_754_p1;
wire   [1:0] z_9_fu_754_p3;
wire   [1:0] z_9_fu_754_p5;
wire  signed [1:0] z_10_fu_917_p1;
wire   [1:0] z_10_fu_917_p3;
wire   [1:0] z_10_fu_917_p5;
wire  signed [1:0] z_8_fu_1239_p1;
wire   [1:0] z_8_fu_1239_p3;
wire   [1:0] z_8_fu_1239_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 ap_return_preg = 32'd0;
end

scaffold_fn_propagateFloat32NaN grp_propagateFloat32NaN_fu_360(
    .ap_ready(grp_propagateFloat32NaN_fu_360_ap_ready),
    .a(a),
    .b(b),
    .float_exception_flags_1_i(float_exception_flags_1_i),
    .float_exception_flags_1_o(grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o),
    .float_exception_flags_1_o_ap_vld(grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o_ap_vld),
    .ap_return(grp_propagateFloat32NaN_fu_360_ap_return),
    .ap_rst(ap_rst)
);

(* dissolve_hierarchy = "yes" *) scaffold_fn_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U16(
    .din0(zext_ln1391_fu_643_p1),
    .din1(z_9_fu_754_p4),
    .din2(z_9_fu_754_p6),
    .def(z_9_fu_754_p7),
    .sel(z_9_fu_754_p8),
    .dout(z_9_fu_754_p9)
);

(* dissolve_hierarchy = "yes" *) scaffold_fn_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U17(
    .din0(zext_ln1409_fu_829_p1),
    .din1(z_10_fu_917_p4),
    .din2(z_10_fu_917_p6),
    .def(z_10_fu_917_p7),
    .sel(z_10_fu_917_p8),
    .dout(z_10_fu_917_p9)
);

(* dissolve_hierarchy = "yes" *) scaffold_fn_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h2 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h0 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U18(
    .din0(shl_ln792_reg_1686),
    .din1(z_8_fu_1239_p4),
    .din2(z_8_fu_1239_p6),
    .def(z_8_fu_1239_p7),
    .sel(z_8_fu_1239_p8),
    .dout(z_8_fu_1239_p9)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_return_preg <= ap_phi_mux_retval_0_phi_fu_338_p18;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1154)) begin
        if ((~(8'd255 == aExp_fu_385_p4) & ~(8'd0 == aExp_fu_385_p4))) begin
            aExp_1_reg_197 <= {{a[30:23]}};
        end else if ((8'd0 == aExp_fu_385_p4)) begin
            aExp_1_reg_197 <= 8'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1380_fu_635_p2 == 1'd1))) begin
        aExp_3_reg_256 <= aExp_1_reg_197;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        aExp_3_reg_256 <= aExp_reg_1502;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1382_fu_639_p2 == 1'd1) & (icmp_ln1380_fu_635_p2 == 1'd0))) begin
        aSig_4_reg_209 <= zext_ln1356_reg_1520;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        aSig_4_reg_209 <= z_9_fu_754_p9;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1154)) begin
        if ((~(8'd255 == aExp_fu_385_p4) & ~(8'd0 == aExp_fu_385_p4))) begin
            bExp_1_reg_185 <= {{b[30:23]}};
        end else if ((8'd0 == aExp_fu_385_p4)) begin
            bExp_1_reg_185 <= 8'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1382_fu_639_p2 == 1'd1) & (icmp_ln1380_fu_635_p2 == 1'd0))) begin
        bExp_3_reg_227 <= bExp_1_reg_185;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        bExp_3_reg_227 <= bExp_reg_1508;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1380_fu_635_p2 == 1'd1))) begin
        bSig_3_reg_238 <= zext_ln1356_2_reg_1536;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        bSig_3_reg_238 <= z_10_fu_917_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1380_fu_635_p2 == 1'd1))) begin
                empty_17_reg_247[30 : 7] <= zext_ln1356_1_reg_1525[30 : 7];
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
                empty_17_reg_247[30 : 7] <= aSig_1_fu_937_p4[30 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln765_fu_1106_p2) & (1'b1 == ap_CS_fsm_state11) & (tmp_23_fu_1112_p3 == 1'd0) & (icmp_ln764_fu_1081_p2 == 1'd0) & (icmp_ln763_fu_1075_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln763_fu_1075_p2 == 1'd0)))) begin
        empty_18_reg_298 <= shl_ln792_reg_1686;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        empty_18_reg_298 <= z_8_fu_1239_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1382_fu_639_p2 == 1'd1) & (icmp_ln1380_fu_635_p2 == 1'd0))) begin
                empty_reg_218[30 : 7] <= zext_ln1356_3_reg_1541[30 : 7];
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
                empty_reg_218[30 : 7] <= bSig_4_fu_774_p4[30 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1404_fu_559_p2 == 1'd1) & (icmp_ln1366_fu_455_p2 == 1'd1) & (icmp_ln1405_fu_629_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_reg_333 <= a;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1382_fu_639_p2 == 1'd0) & (icmp_ln1380_fu_635_p2 == 1'd0))) begin
        retval_0_reg_333 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state13) & (((((((((icmp_ln1404_reg_1581 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd1) & (icmp_ln763_reg_1710 == 1'd0)) | ((icmp_ln1404_reg_1581 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd1) & (1'd0 == and_ln765_reg_1723) & (icmp_ln764_reg_1714 == 1'd0))) | ((icmp_ln1386_reg_1557 == 1'd0) & (tmp_15_reg_1550 == 1'd1) & (icmp_ln1366_reg_1546 == 1'd0) & (1'd0 == and_ln765_reg_1723) & (icmp_ln764_reg_1714 == 1'd0))) | ((icmp_ln1386_reg_1557 == 1'd0) & (tmp_15_reg_1550 == 1'd1) & (icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln763_reg_1710 == 1'd0))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (1'd0 == and_ln765_reg_1723) & (icmp_ln764_reg_1714 == 1'd0) & (icmp_ln1382_reg_1619 == 1'd1))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln763_reg_1710 == 1'd0) & (icmp_ln1382_reg_1619 == 1'd1))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (1'd0 == and_ln765_reg_1723) 
    & (icmp_ln764_reg_1714 == 1'd0) & (icmp_ln1380_reg_1615 == 1'd1))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln763_reg_1710 == 1'd0) & (icmp_ln1380_reg_1615 == 1'd1))))) begin
        retval_0_reg_333 <= add_ln737_fu_1418_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        retval_0_reg_333 <= or_ln737_1_fu_1467_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        retval_0_reg_333 <= or_ln_fu_821_p3;
    end else if (((tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (icmp_ln1371_fu_475_p2 == 1'd1) & (8'd255 == aExp_fu_385_p4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        retval_0_reg_333 <= 32'd4290772992;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        retval_0_reg_333 <= grp_propagateFloat32NaN_fu_360_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln765_fu_1106_p2) & (1'b1 == ap_CS_fsm_state11) & (tmp_23_fu_1112_p3 == 1'd0) & (icmp_ln764_fu_1081_p2 == 1'd0) & (icmp_ln763_fu_1075_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln763_fu_1075_p2 == 1'd0)))) begin
        roundBits_2_reg_309 <= roundBits_reg_1697;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        roundBits_2_reg_309 <= roundBits_1_fu_1259_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((1'b1 == ap_condition_284)) begin
            zExp_2_reg_277 <= bExp_3_reg_227;
        end else if ((1'b1 == ap_condition_274)) begin
            zExp_2_reg_277 <= aExp_3_reg_256;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln765_fu_1106_p2) & (1'b1 == ap_CS_fsm_state11) & (tmp_23_fu_1112_p3 == 1'd0) & (icmp_ln764_fu_1081_p2 == 1'd0) & (icmp_ln763_fu_1075_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln763_fu_1075_p2 == 1'd0)))) begin
        zExp_assign_2_reg_320 <= sub_ln792_fu_1066_p2;
    end else if (((1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        zExp_assign_2_reg_320 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((1'b1 == ap_condition_284)) begin
            zSig_2_reg_267 <= zSig_1_fu_787_p2;
        end else if ((1'b1 == ap_condition_274)) begin
            zSig_2_reg_267 <= zSig_fu_798_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((1'b1 == ap_condition_284)) begin
            zSign_assign_1_reg_288 <= grp_fu_372_p2;
        end else if ((1'b1 == ap_condition_274)) begin
            zSign_assign_1_reg_288 <= zSign;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        aExp_reg_1502 <= {{a[30:23]}};
        aSig_reg_1514[29 : 7] <= aSig_fu_423_p3[29 : 7];
        bExp_reg_1508 <= {{b[30:23]}};
        bSig_reg_1530[29 : 7] <= bSig_fu_439_p3[29 : 7];
        expDiff_2_reg_1591 <= expDiff_2_fu_595_p3;
        expDiff_4_reg_1567 <= expDiff_4_fu_541_p3;
        icmp_ln134_reg_1597 <= icmp_ln134_fu_617_p2;
        icmp_ln1366_reg_1546 <= icmp_ln1366_fu_455_p2;
        icmp_ln1386_reg_1557 <= icmp_ln1386_fu_505_p2;
        icmp_ln1404_reg_1581 <= icmp_ln1404_fu_559_p2;
        select_ln1391_reg_1561[30 : 7] <= select_ln1391_fu_533_p3[30 : 7];
        select_ln1409_reg_1585[30 : 7] <= select_ln1409_fu_587_p3[30 : 7];
        sub_ln135_reg_1602 <= sub_ln135_fu_623_p2;
        tmp_15_reg_1550 <= expDiff_fu_413_p2[32'd8];
        trunc_ln1354_1_reg_1497 <= trunc_ln1354_1_fu_381_p1;
        trunc_ln1354_reg_1492 <= trunc_ln1354_fu_377_p1;
        trunc_ln1357_2_reg_1573 <= trunc_ln1357_2_fu_549_p1;
        zext_ln1356_1_reg_1525[29 : 7] <= zext_ln1356_1_fu_435_p1[29 : 7];
        zext_ln1356_2_reg_1536[29 : 7] <= zext_ln1356_2_fu_447_p1[29 : 7];
        zext_ln1356_3_reg_1541[29 : 7] <= zext_ln1356_3_fu_451_p1[29 : 7];
        zext_ln1356_reg_1520[29 : 7] <= zext_ln1356_fu_431_p1[29 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        and_ln765_reg_1723 <= and_ln765_fu_1106_p2;
        icmp_ln132_2_reg_1731 <= icmp_ln132_2_fu_1130_p2;
        icmp_ln134_2_reg_1737 <= icmp_ln134_2_fu_1145_p2;
        icmp_ln763_reg_1710 <= icmp_ln763_fu_1075_p2;
        icmp_ln764_reg_1714 <= icmp_ln764_fu_1081_p2;
        or_ln135_2_reg_1742 <= or_ln135_2_fu_1175_p2;
        sub_ln792_reg_1703 <= sub_ln792_fu_1066_p2;
        tmp_21_reg_1718 <= add_ln765_fu_1093_p2[32'd31];
        tmp_23_reg_1727 <= sub_ln792_fu_1066_p2[32'd8];
        tmp_4_reg_1747 <= {{lshr_ln135_2_fu_1151_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        and_ln782_reg_1758 <= and_ln782_fu_1382_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln1380_reg_1615 <= icmp_ln1380_fu_635_p2;
        icmp_ln1382_reg_1619 <= icmp_ln1382_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln441_reg_1638 <= icmp_ln441_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln445_reg_1671 <= icmp_ln445_fu_979_p2;
        zExp_reg_1665 <= zExp_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        roundBits_reg_1697 <= roundBits_fu_1059_p1;
        shiftCount_3_reg_1681 <= shiftCount_3_fu_1043_p2;
        shl_ln792_reg_1686 <= shl_ln792_fu_1053_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        ap_phi_mux_empty_18_phi_fu_301_p6 = z_8_fu_1239_p9;
    end else begin
        ap_phi_mux_empty_18_phi_fu_301_p6 = empty_18_reg_298;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (((((((((icmp_ln1404_reg_1581 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd1) & (icmp_ln763_reg_1710 == 1'd0)) | ((icmp_ln1404_reg_1581 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd1) & (1'd0 == and_ln765_reg_1723) & (icmp_ln764_reg_1714 == 1'd0))) | ((icmp_ln1386_reg_1557 == 1'd0) & (tmp_15_reg_1550 == 1'd1) & (icmp_ln1366_reg_1546 == 1'd0) & (1'd0 == and_ln765_reg_1723) & (icmp_ln764_reg_1714 == 1'd0))) | ((icmp_ln1386_reg_1557 == 1'd0) & (tmp_15_reg_1550 == 1'd1) & (icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln763_reg_1710 == 1'd0))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (1'd0 == and_ln765_reg_1723) & (icmp_ln764_reg_1714 == 1'd0) & (icmp_ln1382_reg_1619 == 1'd1))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln763_reg_1710 == 1'd0) & (icmp_ln1382_reg_1619 == 1'd1))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (1'd0 == and_ln765_reg_1723) 
    & (icmp_ln764_reg_1714 == 1'd0) & (icmp_ln1380_reg_1615 == 1'd1))) | (~(8'd255 == aExp_reg_1502) & (tmp_15_reg_1550 == 1'd0) & (icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln763_reg_1710 == 1'd0) & (icmp_ln1380_reg_1615 == 1'd1))))) begin
        ap_phi_mux_retval_0_phi_fu_338_p18 = add_ln737_fu_1418_p2;
    end else begin
        ap_phi_mux_retval_0_phi_fu_338_p18 = retval_0_reg_333;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        ap_phi_mux_roundBits_2_phi_fu_312_p6 = roundBits_1_fu_1259_p1;
    end else begin
        ap_phi_mux_roundBits_2_phi_fu_312_p6 = roundBits_2_reg_309;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((1'b1 == ap_condition_284)) begin
            ap_phi_mux_zSig_2_phi_fu_270_p4 = zSig_1_fu_787_p2;
        end else if ((1'b1 == ap_condition_274)) begin
            ap_phi_mux_zSig_2_phi_fu_270_p4 = zSig_fu_798_p2;
        end else begin
            ap_phi_mux_zSig_2_phi_fu_270_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_zSig_2_phi_fu_270_p4 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_return = ap_phi_mux_retval_0_phi_fu_338_p18;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln775_fu_1270_p2) & (1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        ap_sig_allocacmp_float_exception_flags_1_load_3 = or_ln482_2_fu_1290_p4;
    end else begin
        ap_sig_allocacmp_float_exception_flags_1_load_3 = float_exception_flags_1_i;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        countLeadingZerosHigh_ce0_local = 1'b1;
    end else begin
        countLeadingZerosHigh_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (icmp_ln1371_fu_475_p2 == 1'd1) & (8'd255 == aExp_fu_385_p4) & (1'b1 == ap_CS_fsm_state1))) begin
        float_exception_flags_1_o = or_ln1_fu_491_p3;
    end else if (((icmp_ln779_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        float_exception_flags_1_o = or_ln2_fu_1330_p4;
    end else if (((1'd1 == and_ln775_fu_1270_p2) & (1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1))) begin
        float_exception_flags_1_o = or_ln482_2_fu_1290_p4;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        float_exception_flags_1_o = or_ln482_1_fu_1447_p6;
    end else if ((((grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6)) | ((grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        float_exception_flags_1_o = grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o;
    end else begin
        float_exception_flags_1_o = float_exception_flags_1_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln779_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((1'd1 == and_ln775_fu_1270_p2) & (1'b1 == ap_CS_fsm_state12) & (tmp_23_reg_1727 == 1'd1) & (icmp_ln763_reg_1710 == 1'd1)) | ((tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (icmp_ln1371_fu_475_p2 == 1'd1) & (8'd255 == aExp_fu_385_p4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        float_exception_flags_1_o_ap_vld = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        float_exception_flags_1_o_ap_vld = grp_propagateFloat32NaN_fu_360_float_exception_flags_1_o_ap_vld;
    end else begin
        float_exception_flags_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((icmp_ln1404_fu_559_p2 == 1'd1) & (icmp_ln1366_fu_455_p2 == 1'd1) & (icmp_ln1405_fu_629_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln1404_fu_559_p2 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((icmp_ln1387_fu_553_p2 == 1'd1) & (icmp_ln1386_fu_505_p2 == 1'd1) & (tmp_15_fu_461_p3 == 1'd1) & (icmp_ln1366_fu_455_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((icmp_ln1387_fu_553_p2 == 1'd0) & (icmp_ln1386_fu_505_p2 == 1'd1) & (tmp_15_fu_461_p3 == 1'd1) & (icmp_ln1366_fu_455_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((icmp_ln1386_fu_505_p2 == 1'd0) & (tmp_15_fu_461_p3 == 1'd1) & (icmp_ln1366_fu_455_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (((icmp_ln1404_fu_559_p2 == 1'd1) & (icmp_ln1366_fu_455_p2 == 1'd1) & (icmp_ln1405_fu_629_p2 == 1'd1)) | ((tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (icmp_ln1371_fu_475_p2 == 1'd1) & (8'd255 == aExp_fu_385_p4))))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (icmp_ln1371_fu_475_p2 == 1'd0) & (8'd255 == aExp_fu_385_p4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~(8'd255 == aExp_fu_385_p4) & (tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln1382_fu_639_p2 == 1'd0) & (icmp_ln1380_fu_635_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (((icmp_ln764_fu_1081_p2 == 1'd1) & (icmp_ln763_fu_1075_p2 == 1'd1)) | ((1'd1 == and_ln765_fu_1106_p2) & (icmp_ln763_fu_1075_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aExp_fu_385_p4 = {{a[30:23]}};

assign aSig_1_fu_937_p4 = {{{{1'd1}, {trunc_ln1354_1_reg_1497}}}, {7'd0}};

assign aSig_2_fu_523_p4 = {{{{1'd1}, {trunc_ln1354_1_fu_381_p1}}}, {7'd0}};

assign aSig_fu_423_p3 = {{trunc_ln1354_1_fu_381_p1}, {7'd0}};

assign add_ln737_fu_1418_p2 = (shl_ln737_2_fu_1401_p3 + or_ln737_2_fu_1409_p4);

assign add_ln765_fu_1093_p2 = (shl_ln792_reg_1686 + 32'd64);

assign add_ln781_fu_1346_p2 = (ap_phi_mux_empty_18_phi_fu_301_p6 + 32'd64);

assign add_ln791_fu_1037_p2 = ($signed(zext_ln445_fu_1029_p1) + $signed(6'd63));

assign and_ln134_1_fu_740_p2 = (xor_ln132_1_fu_734_p2 & icmp_ln134_1_fu_670_p2);

assign and_ln134_2_fu_1227_p2 = (xor_ln132_2_fu_1222_p2 & icmp_ln134_2_reg_1737);

assign and_ln134_fu_904_p2 = (xor_ln132_fu_898_p2 & icmp_ln134_reg_1597);

assign and_ln765_fu_1106_p2 = (tmp_21_fu_1098_p3 & icmp_ln765_fu_1087_p2);

assign and_ln775_fu_1270_p2 = (or_ln771_fu_1201_p2 & icmp_ln775_fu_1264_p2);

assign and_ln782_fu_1382_p2 = (trunc_ln5_fu_1352_p4 & sext_ln782_fu_1378_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_condition_1154 = ((tmp_15_fu_461_p3 == 1'd0) & (icmp_ln1366_fu_455_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1));
end

always @ (*) begin
    ap_condition_274 = ((icmp_ln1366_reg_1546 == 1'd1) | ((tmp_15_reg_1550 == 1'd0) & (icmp_ln1380_reg_1615 == 1'd1)));
end

always @ (*) begin
    ap_condition_284 = (((tmp_15_reg_1550 == 1'd1) & (icmp_ln1366_reg_1546 == 1'd0)) | ((icmp_ln1366_reg_1546 == 1'd0) & (icmp_ln1382_reg_1619 == 1'd1) & (icmp_ln1380_reg_1615 == 1'd0)));
end

assign bExp_fu_399_p4 = {{b[30:23]}};

assign bSig_1_fu_577_p4 = {{{{1'd1}, {trunc_ln1354_fu_377_p1}}}, {7'd0}};

assign bSig_4_fu_774_p4 = {{{{1'd1}, {trunc_ln1354_reg_1492}}}, {7'd0}};

assign bSig_fu_439_p3 = {{trunc_ln1354_fu_377_p1}, {7'd0}};

assign countLeadingZerosHigh_address0 = zext_ln449_fu_1003_p1;

assign countLeadingZerosHigh_ce0 = countLeadingZerosHigh_ce0_local;

assign expDiff_1_fu_571_p2 = (trunc_ln1357_fu_419_p1 + 8'd255);

assign expDiff_2_fu_595_p3 = ((icmp_ln1409_fu_565_p2[0:0] == 1'b1) ? expDiff_1_fu_571_p2 : trunc_ln1357_fu_419_p1);

assign expDiff_3_fu_517_p2 = (expDiff_fu_413_p2 + 9'd1);

assign expDiff_4_fu_541_p3 = ((icmp_ln1391_fu_511_p2[0:0] == 1'b1) ? expDiff_3_fu_517_p2 : expDiff_fu_413_p2);

assign expDiff_fu_413_p2 = (zext_ln1355_fu_395_p1 - zext_ln1355_1_fu_409_p1);

assign grp_fu_372_p2 = (zSign ^ 1'd1);

assign icmp_ln132_1_fu_655_p2 = ((expDiff_4_reg_1567 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln132_2_fu_1130_p2 = ((zExp_reg_1665 == sext_ln792_1_fu_1063_p1) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_835_p2 = ((expDiff_2_reg_1591 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln134_1_fu_670_p2 = (($signed(tmp_18_fu_660_p4) < $signed(4'd1)) ? 1'b1 : 1'b0);

assign icmp_ln134_2_fu_1145_p2 = ((tmp_24_fu_1135_p4 != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_617_p2 = ((tmp_17_fu_607_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_1_fu_691_p2 = ((shl_ln135_1_fu_685_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_2_fu_1165_p2 = ((shl_ln135_2_fu_1160_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_855_p2 = ((shl_ln135_fu_849_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1366_fu_455_p2 = (($signed(expDiff_fu_413_p2) > $signed(9'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1371_fu_475_p2 = ((or_ln1371_fu_469_p2 == 30'd0) ? 1'b1 : 1'b0);

assign icmp_ln1380_fu_635_p2 = ((bSig_reg_1530 < aSig_reg_1514) ? 1'b1 : 1'b0);

assign icmp_ln1382_fu_639_p2 = ((aSig_reg_1514 < bSig_reg_1530) ? 1'b1 : 1'b0);

assign icmp_ln1386_fu_505_p2 = ((bExp_fu_399_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1387_fu_553_p2 = ((trunc_ln1354_fu_377_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1391_fu_511_p2 = ((aExp_fu_385_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1404_fu_559_p2 = ((aExp_fu_385_p4 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln1405_fu_629_p2 = ((trunc_ln1354_1_fu_381_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln1409_fu_565_p2 = ((bExp_fu_399_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln441_fu_815_p2 = ((tmp_19_fu_805_p4 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln445_fu_979_p2 = ((tmp_20_fu_969_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln763_fu_1075_p2 = ((sub_ln792_fu_1066_p2 > 9'd252) ? 1'b1 : 1'b0);

assign icmp_ln764_fu_1081_p2 = (($signed(sub_ln792_fu_1066_p2) > $signed(9'd253)) ? 1'b1 : 1'b0);

assign icmp_ln765_fu_1087_p2 = ((sub_ln792_fu_1066_p2 == 9'd253) ? 1'b1 : 1'b0);

assign icmp_ln771_fu_1191_p2 = (($signed(sub_ln792_reg_1703) < $signed(9'd511)) ? 1'b1 : 1'b0);

assign icmp_ln775_fu_1264_p2 = ((roundBits_1_fu_1259_p1 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln779_fu_1306_p2 = ((ap_phi_mux_roundBits_2_phi_fu_312_p6 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln782_fu_1362_p2 = ((ap_phi_mux_roundBits_2_phi_fu_312_p6 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln783_fu_1388_p2 = ((and_ln782_reg_1758 == 25'd0) ? 1'b1 : 1'b0);

assign lshr_ln135_1_fu_676_p2 = zext_ln1391_fu_643_p1 >> zext_ln129_fu_651_p1;

assign lshr_ln135_2_fu_1151_p2 = shl_ln792_reg_1686 >> zext_ln129_1_fu_1126_p1;

assign lshr_ln135_fu_840_p2 = zext_ln1409_fu_829_p1 >> zext_ln1357_fu_832_p1;

assign or_ln135_1_fu_701_p2 = (trunc_ln135_1_fu_697_p1 | icmp_ln135_1_fu_691_p2);

assign or_ln135_2_fu_1175_p2 = (trunc_ln135_2_fu_1171_p1 | icmp_ln135_2_fu_1165_p2);

assign or_ln135_fu_865_p2 = (trunc_ln135_fu_861_p1 | icmp_ln135_fu_855_p2);

assign or_ln1371_fu_469_p2 = (bSig_fu_439_p3 | aSig_fu_423_p3);

assign or_ln1_fu_491_p3 = {{tmp_7_fu_481_p4}, {1'd1}};

assign or_ln2_fu_1330_p4 = {{{tmp_8_fu_1316_p4}, {1'd1}}, {trunc_ln780_fu_1326_p1}};

assign or_ln482_1_fu_1447_p6 = {{{{{tmp_5_fu_1425_p4}, {1'd1}}, {tmp_22_fu_1435_p3}}, {1'd1}}, {trunc_ln482_fu_1443_p1}};

assign or_ln482_2_fu_1290_p4 = {{{tmp_6_fu_1276_p4}, {1'd1}}, {trunc_ln482_1_fu_1286_p1}};

assign or_ln737_1_fu_1467_p3 = {{zSign_assign_1_reg_288}, {31'd2139095040}};

assign or_ln737_2_fu_1409_p4 = {{{zSign_assign_1_reg_288}, {6'd0}}, {and_ln782_reg_1758}};

assign or_ln771_fu_1201_p2 = (xor_ln771_fu_1196_p2 | icmp_ln771_fu_1191_p2);

assign or_ln_fu_821_p3 = {{grp_fu_372_p2}, {31'd2139095040}};

assign roundBits_1_fu_1259_p1 = z_8_fu_1239_p9[6:0];

assign roundBits_fu_1059_p1 = shl_ln792_fu_1053_p2[6:0];

assign select_ln1391_fu_533_p3 = ((icmp_ln1391_fu_511_p2[0:0] == 1'b1) ? zext_ln1356_1_fu_435_p1 : aSig_2_fu_523_p4);

assign select_ln1409_fu_587_p3 = ((icmp_ln1409_fu_565_p2[0:0] == 1'b1) ? zext_ln1356_3_fu_451_p1 : bSig_1_fu_577_p4);

assign select_ln441_1_fu_962_p3 = ((icmp_ln441_reg_1638[0:0] == 1'b1) ? shl_ln443_fu_956_p2 : zSig_2_reg_267);

assign select_ln445_fu_995_p3 = ((icmp_ln445_fu_979_p2[0:0] == 1'b1) ? tmp_9_fu_985_p4 : tmp_20_fu_969_p4);

assign select_ln783_fu_1393_p3 = ((icmp_ln783_fu_1388_p2[0:0] == 1'b1) ? 9'd0 : zExp_assign_2_reg_320);

assign sext_ln782_fu_1378_p1 = $signed(xor_ln782_fu_1372_p2);

assign sext_ln792_1_fu_1063_p1 = shiftCount_3_reg_1681;

assign sext_ln792_fu_1049_p1 = shiftCount_3_fu_1043_p2;

assign shiftCount_1_fu_1015_p3 = ((icmp_ln441_reg_1638[0:0] == 1'b1) ? 5'd24 : 5'd8);

assign shiftCount_2_fu_1022_p3 = ((icmp_ln445_reg_1671[0:0] == 1'b1) ? shiftCount_1_fu_1015_p3 : shiftCount_fu_1008_p3);

assign shiftCount_3_fu_1043_p2 = (add_ln791_fu_1037_p2 + zext_ln791_fu_1033_p1);

assign shiftCount_fu_1008_p3 = ((icmp_ln441_reg_1638[0:0] == 1'b1) ? 5'd16 : 5'd0);

assign shl_ln135_1_fu_685_p2 = zext_ln1391_fu_643_p1 << zext_ln135_1_fu_682_p1;

assign shl_ln135_2_fu_1160_p2 = shl_ln792_reg_1686 << zext_ln135_2_fu_1156_p1;

assign shl_ln135_fu_849_p2 = zext_ln1409_fu_829_p1 << zext_ln135_fu_846_p1;

assign shl_ln443_fu_956_p2 = zSig_2_reg_267 << 32'd16;

assign shl_ln737_2_fu_1401_p3 = {{select_ln783_fu_1393_p3}, {23'd0}};

assign shl_ln792_fu_1053_p2 = zSig_2_reg_267 << sext_ln792_fu_1049_p1;

assign sub_ln135_fu_623_p2 = (5'd0 - trunc_ln1357_1_fu_603_p1);

assign sub_ln1396_fu_646_p2 = (9'd0 - expDiff_4_reg_1567);

assign sub_ln772_fu_1120_p2 = (9'd0 - sub_ln792_fu_1066_p2);

assign sub_ln792_fu_1066_p2 = ($signed(zExp_reg_1665) - $signed(sext_ln792_1_fu_1063_p1));

assign tmp_15_fu_461_p3 = expDiff_fu_413_p2[32'd8];

assign tmp_17_fu_607_p4 = {{expDiff_2_fu_595_p3[7:5]}};

assign tmp_18_fu_660_p4 = {{sub_ln1396_fu_646_p2[8:5]}};

assign tmp_19_fu_805_p4 = {{ap_phi_mux_zSig_2_phi_fu_270_p4[31:16]}};

assign tmp_20_fu_969_p4 = {{select_ln441_1_fu_962_p3[31:24]}};

assign tmp_21_fu_1098_p3 = add_ln765_fu_1093_p2[32'd31];

assign tmp_22_fu_1435_p3 = float_exception_flags_1_i[32'd4];

assign tmp_23_fu_1112_p3 = sub_ln792_fu_1066_p2[32'd8];

assign tmp_24_fu_1135_p4 = {{sub_ln772_fu_1120_p2[6:5]}};

assign tmp_2_fu_871_p4 = {{lshr_ln135_fu_840_p2[31:1]}};

assign tmp_3_fu_707_p4 = {{lshr_ln135_1_fu_676_p2[31:1]}};

assign tmp_5_fu_1425_p4 = {{float_exception_flags_1_i[7:6]}};

assign tmp_6_fu_1276_p4 = {{float_exception_flags_1_i[7:5]}};

assign tmp_7_fu_481_p4 = {{float_exception_flags_1_i[7:1]}};

assign tmp_8_fu_1316_p4 = {{ap_sig_allocacmp_float_exception_flags_1_load_3[7:6]}};

assign tmp_9_fu_985_p4 = {{select_ln441_1_fu_962_p3[23:16]}};

assign trunc_ln1354_1_fu_381_p1 = a[22:0];

assign trunc_ln1354_fu_377_p1 = b[22:0];

assign trunc_ln1357_1_fu_603_p1 = expDiff_2_fu_595_p3[4:0];

assign trunc_ln1357_2_fu_549_p1 = expDiff_4_fu_541_p3[4:0];

assign trunc_ln1357_fu_419_p1 = expDiff_fu_413_p2[7:0];

assign trunc_ln135_1_fu_697_p1 = lshr_ln135_1_fu_676_p2[0:0];

assign trunc_ln135_2_fu_1171_p1 = lshr_ln135_2_fu_1151_p2[0:0];

assign trunc_ln135_fu_861_p1 = lshr_ln135_fu_840_p2[0:0];

assign trunc_ln482_1_fu_1286_p1 = float_exception_flags_1_i[3:0];

assign trunc_ln482_fu_1443_p1 = float_exception_flags_1_i[2:0];

assign trunc_ln5_fu_1352_p4 = {{add_ln781_fu_1346_p2[31:7]}};

assign trunc_ln780_fu_1326_p1 = ap_sig_allocacmp_float_exception_flags_1_load_3[4:0];

assign trunc_ln792_fu_1071_p1 = sub_ln792_fu_1066_p2[4:0];

assign xor_ln132_1_fu_734_p2 = (icmp_ln132_1_fu_655_p2 ^ 1'd1);

assign xor_ln132_2_fu_1222_p2 = (icmp_ln132_2_reg_1731 ^ 1'd1);

assign xor_ln132_fu_898_p2 = (icmp_ln132_fu_835_p2 ^ 1'd1);

assign xor_ln771_fu_1196_p2 = (tmp_21_reg_1718 ^ 1'd1);

assign xor_ln782_fu_1372_p2 = (zext_ln782_fu_1368_p1 ^ 2'd3);

assign zExp_fu_950_p2 = ($signed(zext_ln1354_fu_946_p1) + $signed(9'd511));

assign zSig_1_fu_787_p2 = (zext_ln1356_5_fu_783_p1 - aSig_4_reg_209);

assign zSig_fu_798_p2 = (zext_ln1356_4_fu_794_p1 - bSig_3_reg_238);

assign z_10_fu_917_p4 = {{tmp_2_fu_871_p4}, {or_ln135_fu_865_p2}};

assign z_10_fu_917_p6 = z_1_fu_889_p2;

assign z_10_fu_917_p7 = 'bx;

assign z_10_fu_917_p8 = {{icmp_ln132_fu_835_p2}, {and_ln134_fu_904_p2}};

assign z_1_fu_889_p2 = ((select_ln1409_reg_1585 != 31'd0) ? 1'b1 : 1'b0);

assign z_4_fu_725_p2 = ((select_ln1391_reg_1561 != 31'd0) ? 1'b1 : 1'b0);

assign z_7_fu_1213_p2 = ((shl_ln792_reg_1686 != 32'd0) ? 1'b1 : 1'b0);

assign z_8_fu_1239_p4 = {{tmp_4_reg_1747}, {or_ln135_2_reg_1742}};

assign z_8_fu_1239_p6 = z_7_fu_1213_p2;

assign z_8_fu_1239_p7 = 'bx;

assign z_8_fu_1239_p8 = {{icmp_ln132_2_reg_1731}, {and_ln134_2_fu_1227_p2}};

assign z_9_fu_754_p4 = {{tmp_3_fu_707_p4}, {or_ln135_1_fu_701_p2}};

assign z_9_fu_754_p6 = z_4_fu_725_p2;

assign z_9_fu_754_p7 = 'bx;

assign z_9_fu_754_p8 = {{icmp_ln132_1_fu_655_p2}, {and_ln134_1_fu_740_p2}};

assign zext_ln129_1_fu_1126_p1 = sub_ln772_fu_1120_p2;

assign zext_ln129_fu_651_p1 = sub_ln1396_fu_646_p2;

assign zext_ln1354_fu_946_p1 = zExp_2_reg_277;

assign zext_ln1355_1_fu_409_p1 = bExp_fu_399_p4;

assign zext_ln1355_fu_395_p1 = aExp_fu_385_p4;

assign zext_ln1356_1_fu_435_p1 = aSig_fu_423_p3;

assign zext_ln1356_2_fu_447_p1 = bSig_fu_439_p3;

assign zext_ln1356_3_fu_451_p1 = bSig_fu_439_p3;

assign zext_ln1356_4_fu_794_p1 = empty_17_reg_247;

assign zext_ln1356_5_fu_783_p1 = empty_reg_218;

assign zext_ln1356_fu_431_p1 = aSig_fu_423_p3;

assign zext_ln1357_fu_832_p1 = expDiff_2_reg_1591;

assign zext_ln135_1_fu_682_p1 = trunc_ln1357_2_reg_1573;

assign zext_ln135_2_fu_1156_p1 = trunc_ln792_fu_1071_p1;

assign zext_ln135_fu_846_p1 = sub_ln135_reg_1602;

assign zext_ln1391_fu_643_p1 = select_ln1391_reg_1561;

assign zext_ln1409_fu_829_p1 = select_ln1409_reg_1585;

assign zext_ln445_fu_1029_p1 = shiftCount_2_fu_1022_p3;

assign zext_ln449_fu_1003_p1 = select_ln445_fu_995_p3;

assign zext_ln782_fu_1368_p1 = icmp_ln782_fu_1362_p2;

assign zext_ln791_fu_1033_p1 = countLeadingZerosHigh_q0;

always @ (posedge ap_clk) begin
    aSig_reg_1514[6:0] <= 7'b0000000;
    zext_ln1356_reg_1520[6:0] <= 7'b0000000;
    zext_ln1356_reg_1520[31:30] <= 2'b00;
    zext_ln1356_1_reg_1525[6:0] <= 7'b0000000;
    zext_ln1356_1_reg_1525[30] <= 1'b0;
    bSig_reg_1530[6:0] <= 7'b0000000;
    zext_ln1356_2_reg_1536[6:0] <= 7'b0000000;
    zext_ln1356_2_reg_1536[31:30] <= 2'b00;
    zext_ln1356_3_reg_1541[6:0] <= 7'b0000000;
    zext_ln1356_3_reg_1541[30] <= 1'b0;
    select_ln1391_reg_1561[6:0] <= 7'b0000000;
    select_ln1409_reg_1585[6:0] <= 7'b0000000;
    empty_reg_218[6:0] <= 7'b0000000;
    empty_17_reg_247[6:0] <= 7'b0000000;
end

endmodule //scaffold_fn_subFloat32Sigs
